//
// File generated by rootcint at Wed Jan 22 16:48:47 2014

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "g4numiCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void data_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_data_t(void *p = 0);
   static void *newArray_data_t(Long_t size, void *p);
   static void delete_data_t(void *p);
   static void deleteArray_data_t(void *p);
   static void destruct_data_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::data_t*)
   {
      ::data_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::data_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("data_t", ::data_t::Class_Version(), "./include/../include/data_t.hh", 16,
                  typeid(::data_t), DefineBehavior(ptr, ptr),
                  &::data_t::Dictionary, isa_proxy, 4,
                  sizeof(::data_t) );
      instance.SetNew(&new_data_t);
      instance.SetNewArray(&newArray_data_t);
      instance.SetDelete(&delete_data_t);
      instance.SetDeleteArray(&deleteArray_data_t);
      instance.SetDestructor(&destruct_data_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::data_t*)
   {
      return GenerateInitInstanceLocal((::data_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::data_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void hadmmtuple_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_hadmmtuple_t(void *p = 0);
   static void *newArray_hadmmtuple_t(Long_t size, void *p);
   static void delete_hadmmtuple_t(void *p);
   static void deleteArray_hadmmtuple_t(void *p);
   static void destruct_hadmmtuple_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::hadmmtuple_t*)
   {
      ::hadmmtuple_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::hadmmtuple_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("hadmmtuple_t", ::hadmmtuple_t::Class_Version(), "./include/../include/hadmmtuple_t.hh", 18,
                  typeid(::hadmmtuple_t), DefineBehavior(ptr, ptr),
                  &::hadmmtuple_t::Dictionary, isa_proxy, 4,
                  sizeof(::hadmmtuple_t) );
      instance.SetNew(&new_hadmmtuple_t);
      instance.SetNewArray(&newArray_hadmmtuple_t);
      instance.SetDelete(&delete_hadmmtuple_t);
      instance.SetDeleteArray(&deleteArray_hadmmtuple_t);
      instance.SetDestructor(&destruct_hadmmtuple_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::hadmmtuple_t*)
   {
      return GenerateInitInstanceLocal((::hadmmtuple_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void draytupleSPB_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_draytupleSPB_t(void *p = 0);
   static void *newArray_draytupleSPB_t(Long_t size, void *p);
   static void delete_draytupleSPB_t(void *p);
   static void deleteArray_draytupleSPB_t(void *p);
   static void destruct_draytupleSPB_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::draytupleSPB_t*)
   {
      ::draytupleSPB_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::draytupleSPB_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("draytupleSPB_t", ::draytupleSPB_t::Class_Version(), "./include/../include/draytupleSPB_t.hh", 18,
                  typeid(::draytupleSPB_t), DefineBehavior(ptr, ptr),
                  &::draytupleSPB_t::Dictionary, isa_proxy, 4,
                  sizeof(::draytupleSPB_t) );
      instance.SetNew(&new_draytupleSPB_t);
      instance.SetNewArray(&newArray_draytupleSPB_t);
      instance.SetDelete(&delete_draytupleSPB_t);
      instance.SetDeleteArray(&deleteArray_draytupleSPB_t);
      instance.SetDestructor(&destruct_draytupleSPB_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::draytupleSPB_t*)
   {
      return GenerateInitInstanceLocal((::draytupleSPB_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::draytupleSPB_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Edep_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_Edep_t(void *p = 0);
   static void *newArray_Edep_t(Long_t size, void *p);
   static void delete_Edep_t(void *p);
   static void deleteArray_Edep_t(void *p);
   static void destruct_Edep_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Edep_t*)
   {
      ::Edep_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Edep_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Edep_t", ::Edep_t::Class_Version(), "./include/../include/Edep_t.hh", 27,
                  typeid(::Edep_t), DefineBehavior(ptr, ptr),
                  &::Edep_t::Dictionary, isa_proxy, 4,
                  sizeof(::Edep_t) );
      instance.SetNew(&new_Edep_t);
      instance.SetNewArray(&newArray_Edep_t);
      instance.SetDelete(&delete_Edep_t);
      instance.SetDeleteArray(&deleteArray_Edep_t);
      instance.SetDestructor(&destruct_Edep_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Edep_t*)
   {
      return GenerateInitInstanceLocal((::Edep_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Edep_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void draytupleMIB_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_draytupleMIB_t(void *p = 0);
   static void *newArray_draytupleMIB_t(Long_t size, void *p);
   static void delete_draytupleMIB_t(void *p);
   static void deleteArray_draytupleMIB_t(void *p);
   static void destruct_draytupleMIB_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::draytupleMIB_t*)
   {
      ::draytupleMIB_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::draytupleMIB_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("draytupleMIB_t", ::draytupleMIB_t::Class_Version(), "./include/../include/draytupleMIB_t.hh", 27,
                  typeid(::draytupleMIB_t), DefineBehavior(ptr, ptr),
                  &::draytupleMIB_t::Dictionary, isa_proxy, 4,
                  sizeof(::draytupleMIB_t) );
      instance.SetNew(&new_draytupleMIB_t);
      instance.SetNewArray(&newArray_draytupleMIB_t);
      instance.SetDelete(&delete_draytupleMIB_t);
      instance.SetDeleteArray(&deleteArray_draytupleMIB_t);
      instance.SetDestructor(&destruct_draytupleMIB_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::draytupleMIB_t*)
   {
      return GenerateInitInstanceLocal((::draytupleMIB_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::draytupleMIB_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void absbkgtuple_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_absbkgtuple_t(void *p = 0);
   static void *newArray_absbkgtuple_t(Long_t size, void *p);
   static void delete_absbkgtuple_t(void *p);
   static void deleteArray_absbkgtuple_t(void *p);
   static void destruct_absbkgtuple_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::absbkgtuple_t*)
   {
      ::absbkgtuple_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::absbkgtuple_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("absbkgtuple_t", ::absbkgtuple_t::Class_Version(), "./include/../include/absbkgtuple_t.hh", 15,
                  typeid(::absbkgtuple_t), DefineBehavior(ptr, ptr),
                  &::absbkgtuple_t::Dictionary, isa_proxy, 4,
                  sizeof(::absbkgtuple_t) );
      instance.SetNew(&new_absbkgtuple_t);
      instance.SetNewArray(&newArray_absbkgtuple_t);
      instance.SetDelete(&delete_absbkgtuple_t);
      instance.SetDeleteArray(&deleteArray_absbkgtuple_t);
      instance.SetDestructor(&destruct_absbkgtuple_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::absbkgtuple_t*)
   {
      return GenerateInitInstanceLocal((::absbkgtuple_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::absbkgtuple_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void zptuple_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_zptuple_t(void *p = 0);
   static void *newArray_zptuple_t(Long_t size, void *p);
   static void delete_zptuple_t(void *p);
   static void deleteArray_zptuple_t(void *p);
   static void destruct_zptuple_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::zptuple_t*)
   {
      ::zptuple_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::zptuple_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("zptuple_t", ::zptuple_t::Class_Version(), "./include/../include/zptuple_t.hh", 15,
                  typeid(::zptuple_t), DefineBehavior(ptr, ptr),
                  &::zptuple_t::Dictionary, isa_proxy, 4,
                  sizeof(::zptuple_t) );
      instance.SetNew(&new_zptuple_t);
      instance.SetNewArray(&newArray_zptuple_t);
      instance.SetDelete(&delete_zptuple_t);
      instance.SetDeleteArray(&deleteArray_zptuple_t);
      instance.SetDestructor(&destruct_zptuple_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::zptuple_t*)
   {
      return GenerateInitInstanceLocal((::zptuple_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::zptuple_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void target_exit_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_target_exit_t(void *p = 0);
   static void *newArray_target_exit_t(Long_t size, void *p);
   static void delete_target_exit_t(void *p);
   static void deleteArray_target_exit_t(void *p);
   static void destruct_target_exit_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::target_exit_t*)
   {
      ::target_exit_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::target_exit_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("target_exit_t", ::target_exit_t::Class_Version(), "./include/../include/target_exit_t.hh", 15,
                  typeid(::target_exit_t), DefineBehavior(ptr, ptr),
                  &::target_exit_t::Dictionary, isa_proxy, 4,
                  sizeof(::target_exit_t) );
      instance.SetNew(&new_target_exit_t);
      instance.SetNewArray(&newArray_target_exit_t);
      instance.SetDelete(&delete_target_exit_t);
      instance.SetDeleteArray(&deleteArray_target_exit_t);
      instance.SetDestructor(&destruct_target_exit_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::target_exit_t*)
   {
      return GenerateInitInstanceLocal((::target_exit_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::target_exit_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ProdTuple_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_ProdTuple_t(void *p = 0);
   static void *newArray_ProdTuple_t(Long_t size, void *p);
   static void delete_ProdTuple_t(void *p);
   static void deleteArray_ProdTuple_t(void *p);
   static void destruct_ProdTuple_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ProdTuple_t*)
   {
      ::ProdTuple_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ProdTuple_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ProdTuple_t", ::ProdTuple_t::Class_Version(), "./include/../include/ProdTuple_t.hh", 12,
                  typeid(::ProdTuple_t), DefineBehavior(ptr, ptr),
                  &::ProdTuple_t::Dictionary, isa_proxy, 4,
                  sizeof(::ProdTuple_t) );
      instance.SetNew(&new_ProdTuple_t);
      instance.SetNewArray(&newArray_ProdTuple_t);
      instance.SetDelete(&delete_ProdTuple_t);
      instance.SetDeleteArray(&deleteArray_ProdTuple_t);
      instance.SetDestructor(&destruct_ProdTuple_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ProdTuple_t*)
   {
      return GenerateInitInstanceLocal((::ProdTuple_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TrackInfo_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TrackInfo_t(void *p = 0);
   static void *newArray_TrackInfo_t(Long_t size, void *p);
   static void delete_TrackInfo_t(void *p);
   static void deleteArray_TrackInfo_t(void *p);
   static void destruct_TrackInfo_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TrackInfo_t*)
   {
      ::TrackInfo_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TrackInfo_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TrackInfo_t", ::TrackInfo_t::Class_Version(), "./include/../include/TrackInfo_t.hh", 12,
                  typeid(::TrackInfo_t), DefineBehavior(ptr, ptr),
                  &::TrackInfo_t::Dictionary, isa_proxy, 4,
                  sizeof(::TrackInfo_t) );
      instance.SetNew(&new_TrackInfo_t);
      instance.SetNewArray(&newArray_TrackInfo_t);
      instance.SetDelete(&delete_TrackInfo_t);
      instance.SetDeleteArray(&deleteArray_TrackInfo_t);
      instance.SetDestructor(&destruct_TrackInfo_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TrackInfo_t*)
   {
      return GenerateInitInstanceLocal((::TrackInfo_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *data_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *data_t::Class_Name()
{
   return "data_t";
}

//______________________________________________________________________________
const char *data_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::data_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int data_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::data_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void data_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::data_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *data_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::data_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *hadmmtuple_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *hadmmtuple_t::Class_Name()
{
   return "hadmmtuple_t";
}

//______________________________________________________________________________
const char *hadmmtuple_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int hadmmtuple_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void hadmmtuple_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *hadmmtuple_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::hadmmtuple_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *draytupleSPB_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *draytupleSPB_t::Class_Name()
{
   return "draytupleSPB_t";
}

//______________________________________________________________________________
const char *draytupleSPB_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::draytupleSPB_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int draytupleSPB_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::draytupleSPB_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void draytupleSPB_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::draytupleSPB_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *draytupleSPB_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::draytupleSPB_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Edep_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Edep_t::Class_Name()
{
   return "Edep_t";
}

//______________________________________________________________________________
const char *Edep_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Edep_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Edep_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Edep_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Edep_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Edep_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Edep_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Edep_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *draytupleMIB_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *draytupleMIB_t::Class_Name()
{
   return "draytupleMIB_t";
}

//______________________________________________________________________________
const char *draytupleMIB_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::draytupleMIB_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int draytupleMIB_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::draytupleMIB_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void draytupleMIB_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::draytupleMIB_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *draytupleMIB_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::draytupleMIB_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *absbkgtuple_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *absbkgtuple_t::Class_Name()
{
   return "absbkgtuple_t";
}

//______________________________________________________________________________
const char *absbkgtuple_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::absbkgtuple_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int absbkgtuple_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::absbkgtuple_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void absbkgtuple_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::absbkgtuple_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *absbkgtuple_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::absbkgtuple_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *zptuple_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *zptuple_t::Class_Name()
{
   return "zptuple_t";
}

//______________________________________________________________________________
const char *zptuple_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::zptuple_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int zptuple_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::zptuple_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void zptuple_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::zptuple_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *zptuple_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::zptuple_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *target_exit_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *target_exit_t::Class_Name()
{
   return "target_exit_t";
}

//______________________________________________________________________________
const char *target_exit_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::target_exit_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int target_exit_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::target_exit_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void target_exit_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::target_exit_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *target_exit_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::target_exit_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ProdTuple_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ProdTuple_t::Class_Name()
{
   return "ProdTuple_t";
}

//______________________________________________________________________________
const char *ProdTuple_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ProdTuple_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ProdTuple_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ProdTuple_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ProdTuple_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TrackInfo_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TrackInfo_t::Class_Name()
{
   return "TrackInfo_t";
}

//______________________________________________________________________________
const char *TrackInfo_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrackInfo_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrackInfo_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrackInfo_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrackInfo_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void data_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class data_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(data_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(data_t::Class(),this);
   }
}

//______________________________________________________________________________
void data_t::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class data_t.
      TClass *R__cl = ::data_t::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "run", &run);
      R__insp.Inspect(R__cl, R__parent, "evtno", &evtno);
      R__insp.Inspect(R__cl, R__parent, "beamHWidth", &beamHWidth);
      R__insp.Inspect(R__cl, R__parent, "beamVWidth", &beamVWidth);
      R__insp.Inspect(R__cl, R__parent, "beamX", &beamX);
      R__insp.Inspect(R__cl, R__parent, "beamY", &beamY);
      R__insp.Inspect(R__cl, R__parent, "protonX", &protonX);
      R__insp.Inspect(R__cl, R__parent, "protonY", &protonY);
      R__insp.Inspect(R__cl, R__parent, "protonZ", &protonZ);
      R__insp.Inspect(R__cl, R__parent, "protonPx", &protonPx);
      R__insp.Inspect(R__cl, R__parent, "protonPy", &protonPy);
      R__insp.Inspect(R__cl, R__parent, "protonPz", &protonPz);
      R__insp.Inspect(R__cl, R__parent, "nuTarZ", &nuTarZ);
      R__insp.Inspect(R__cl, R__parent, "hornCurrent", &hornCurrent);
      R__insp.Inspect(R__cl, R__parent, "Ndxdz", &Ndxdz);
      R__insp.Inspect(R__cl, R__parent, "Ndydz", &Ndydz);
      R__insp.Inspect(R__cl, R__parent, "Npz", &Npz);
      R__insp.Inspect(R__cl, R__parent, "Nenergy", &Nenergy);
      R__insp.Inspect(R__cl, R__parent, "NdxdzNear[11]", NdxdzNear);
      R__insp.Inspect(R__cl, R__parent, "NdydzNear[11]", NdydzNear);
      R__insp.Inspect(R__cl, R__parent, "NenergyN[11]", NenergyN);
      R__insp.Inspect(R__cl, R__parent, "NWtNear[11]", NWtNear);
      R__insp.Inspect(R__cl, R__parent, "NdxdzFar[2]", NdxdzFar);
      R__insp.Inspect(R__cl, R__parent, "NdydzFar[2]", NdydzFar);
      R__insp.Inspect(R__cl, R__parent, "NenergyF[2]", NenergyF);
      R__insp.Inspect(R__cl, R__parent, "NWtFar[2]", NWtFar);
      R__insp.Inspect(R__cl, R__parent, "Norig", &Norig);
      R__insp.Inspect(R__cl, R__parent, "Ndecay", &Ndecay);
      R__insp.Inspect(R__cl, R__parent, "Ntype", &Ntype);
      R__insp.Inspect(R__cl, R__parent, "Vx", &Vx);
      R__insp.Inspect(R__cl, R__parent, "Vy", &Vy);
      R__insp.Inspect(R__cl, R__parent, "Vz", &Vz);
      R__insp.Inspect(R__cl, R__parent, "pdPx", &pdPx);
      R__insp.Inspect(R__cl, R__parent, "pdPy", &pdPy);
      R__insp.Inspect(R__cl, R__parent, "pdPz", &pdPz);
      R__insp.Inspect(R__cl, R__parent, "ppdxdz", &ppdxdz);
      R__insp.Inspect(R__cl, R__parent, "ppdydz", &ppdydz);
      R__insp.Inspect(R__cl, R__parent, "pppz", &pppz);
      R__insp.Inspect(R__cl, R__parent, "ppenergy", &ppenergy);
      R__insp.Inspect(R__cl, R__parent, "ppmedium", &ppmedium);
      R__insp.Inspect(R__cl, R__parent, "ptype", &ptype);
      R__insp.Inspect(R__cl, R__parent, "ppvx", &ppvx);
      R__insp.Inspect(R__cl, R__parent, "ppvy", &ppvy);
      R__insp.Inspect(R__cl, R__parent, "ppvz", &ppvz);
      R__insp.Inspect(R__cl, R__parent, "muparpx", &muparpx);
      R__insp.Inspect(R__cl, R__parent, "muparpy", &muparpy);
      R__insp.Inspect(R__cl, R__parent, "muparpz", &muparpz);
      R__insp.Inspect(R__cl, R__parent, "mupare", &mupare);
      R__insp.Inspect(R__cl, R__parent, "Necm", &Necm);
      R__insp.Inspect(R__cl, R__parent, "Nimpwt", &Nimpwt);
      R__insp.Inspect(R__cl, R__parent, "xpoint", &xpoint);
      R__insp.Inspect(R__cl, R__parent, "ypoint", &ypoint);
      R__insp.Inspect(R__cl, R__parent, "zpoint", &zpoint);
      R__insp.Inspect(R__cl, R__parent, "tvx", &tvx);
      R__insp.Inspect(R__cl, R__parent, "tvy", &tvy);
      R__insp.Inspect(R__cl, R__parent, "tvz", &tvz);
      R__insp.Inspect(R__cl, R__parent, "tpx", &tpx);
      R__insp.Inspect(R__cl, R__parent, "tpy", &tpy);
      R__insp.Inspect(R__cl, R__parent, "tpz", &tpz);
      R__insp.Inspect(R__cl, R__parent, "tptype", &tptype);
      R__insp.Inspect(R__cl, R__parent, "tgen", &tgen);
      R__insp.Inspect(R__cl, R__parent, "ntrajectory", &ntrajectory);
      R__insp.Inspect(R__cl, R__parent, "overflow", &overflow);
      R__insp.Inspect(R__cl, R__parent, "pdg[10]", pdg);
      R__insp.Inspect(R__cl, R__parent, "trackId[10]", trackId);
      R__insp.Inspect(R__cl, R__parent, "parentId[10]", parentId);
      R__insp.Inspect(R__cl, R__parent, "startx[10]", startx);
      R__insp.Inspect(R__cl, R__parent, "starty[10]", starty);
      R__insp.Inspect(R__cl, R__parent, "startz[10]", startz);
      R__insp.Inspect(R__cl, R__parent, "stopx[10]", stopx);
      R__insp.Inspect(R__cl, R__parent, "stopy[10]", stopy);
      R__insp.Inspect(R__cl, R__parent, "stopz[10]", stopz);
      R__insp.Inspect(R__cl, R__parent, "startpx[10]", startpx);
      R__insp.Inspect(R__cl, R__parent, "startpy[10]", startpy);
      R__insp.Inspect(R__cl, R__parent, "startpz[10]", startpz);
      R__insp.Inspect(R__cl, R__parent, "stoppx[10]", stoppx);
      R__insp.Inspect(R__cl, R__parent, "stoppy[10]", stoppy);
      R__insp.Inspect(R__cl, R__parent, "stoppz[10]", stoppz);
      R__insp.Inspect(R__cl, R__parent, "pprodpx[10]", pprodpx);
      R__insp.Inspect(R__cl, R__parent, "pprodpy[10]", pprodpy);
      R__insp.Inspect(R__cl, R__parent, "pprodpz[10]", pprodpz);
      R__insp.Inspect(R__cl, R__parent, "proc[10]", proc);
      R__insp.Inspect(R__cl, R__parent, "ivol[10]", ivol);
      R__insp.Inspect(R__cl, R__parent, "fvol[10]", fvol);
      R__insp.Inspect(R__cl, R__parent, "trkx[10]", trkx);
      R__insp.Inspect(R__cl, R__parent, "trky[10]", trky);
      R__insp.Inspect(R__cl, R__parent, "trkz[10]", trkz);
      R__insp.Inspect(R__cl, R__parent, "trkpx[10]", trkpx);
      R__insp.Inspect(R__cl, R__parent, "trkpy[10]", trkpy);
      R__insp.Inspect(R__cl, R__parent, "trkpz[10]", trkpz);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_data_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::data_t : new ::data_t;
   }
   static void *newArray_data_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::data_t[nElements] : new ::data_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_data_t(void *p) {
      delete ((::data_t*)p);
   }
   static void deleteArray_data_t(void *p) {
      delete [] ((::data_t*)p);
   }
   static void destruct_data_t(void *p) {
      typedef ::data_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::data_t

//______________________________________________________________________________
void hadmmtuple_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class hadmmtuple_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(hadmmtuple_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(hadmmtuple_t::Class(),this);
   }
}

//______________________________________________________________________________
void hadmmtuple_t::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class hadmmtuple_t.
      TClass *R__cl = ::hadmmtuple_t::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "evtno", &evtno);
      R__insp.Inspect(R__cl, R__parent, "muvx", &muvx);
      R__insp.Inspect(R__cl, R__parent, "muvy", &muvy);
      R__insp.Inspect(R__cl, R__parent, "mupx", &mupx);
      R__insp.Inspect(R__cl, R__parent, "mupy", &mupy);
      R__insp.Inspect(R__cl, R__parent, "mupz", &mupz);
      R__insp.Inspect(R__cl, R__parent, "muweight", &muweight);
      R__insp.Inspect(R__cl, R__parent, "tvx", &tvx);
      R__insp.Inspect(R__cl, R__parent, "tvy", &tvy);
      R__insp.Inspect(R__cl, R__parent, "tvz", &tvz);
      R__insp.Inspect(R__cl, R__parent, "tpx", &tpx);
      R__insp.Inspect(R__cl, R__parent, "tpy", &tpy);
      R__insp.Inspect(R__cl, R__parent, "tpz", &tpz);
      R__insp.Inspect(R__cl, R__parent, "tpptype", &tpptype);
      R__insp.Inspect(R__cl, R__parent, "nimpwt", &nimpwt);
      R__insp.Inspect(R__cl, R__parent, "ppvx", &ppvx);
      R__insp.Inspect(R__cl, R__parent, "ppvy", &ppvy);
      R__insp.Inspect(R__cl, R__parent, "ppvz", &ppvz);
      R__insp.Inspect(R__cl, R__parent, "pdvx", &pdvx);
      R__insp.Inspect(R__cl, R__parent, "pdvy", &pdvy);
      R__insp.Inspect(R__cl, R__parent, "pdvz", &pdvz);
      R__insp.Inspect(R__cl, R__parent, "pdpx", &pdpx);
      R__insp.Inspect(R__cl, R__parent, "pdpy", &pdpy);
      R__insp.Inspect(R__cl, R__parent, "pdpz", &pdpz);
      R__insp.Inspect(R__cl, R__parent, "pptype", &pptype);
      R__insp.Inspect(R__cl, R__parent, "ptype", &ptype);
      R__insp.Inspect(R__cl, R__parent, "ppmedium", &ppmedium);
      R__insp.Inspect(R__cl, R__parent, "pgen", &pgen);
      R__insp.Inspect(R__cl, R__parent, "mmxpos[3]", mmxpos);
      R__insp.Inspect(R__cl, R__parent, "mmypos[3]", mmypos);
      R__insp.Inspect(R__cl, R__parent, "mmpx[3]", mmpx);
      R__insp.Inspect(R__cl, R__parent, "mmpy[3]", mmpy);
      R__insp.Inspect(R__cl, R__parent, "mmpz[3]", mmpz);
      R__insp.Inspect(R__cl, R__parent, "cell[3]", cell);
      R__insp.Inspect(R__cl, R__parent, "mmpx_Edep[3]", mmpx_Edep);
      R__insp.Inspect(R__cl, R__parent, "mmpy_Edep[3]", mmpy_Edep);
      R__insp.Inspect(R__cl, R__parent, "mmpz_Edep[3]", mmpz_Edep);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_hadmmtuple_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::hadmmtuple_t : new ::hadmmtuple_t;
   }
   static void *newArray_hadmmtuple_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::hadmmtuple_t[nElements] : new ::hadmmtuple_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_hadmmtuple_t(void *p) {
      delete ((::hadmmtuple_t*)p);
   }
   static void deleteArray_hadmmtuple_t(void *p) {
      delete [] ((::hadmmtuple_t*)p);
   }
   static void destruct_hadmmtuple_t(void *p) {
      typedef ::hadmmtuple_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::hadmmtuple_t

//______________________________________________________________________________
void Edep_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class Edep_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Edep_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(Edep_t::Class(),this);
   }
}

//______________________________________________________________________________
void Edep_t::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class Edep_t.
      TClass *R__cl = ::Edep_t::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "nTracks", &nTracks);
      R__insp.Inspect(R__cl, R__parent, "wghtedNTracks", &wghtedNTracks);
      R__insp.Inspect(R__cl, R__parent, "sumEdepWghts", &sumEdepWghts);
      R__insp.Inspect(R__cl, R__parent, "sumWghtdEdep", &sumWghtdEdep);
      R__insp.Inspect(R__cl, R__parent, "sumWghtdEdep2", &sumWghtdEdep2);
      R__insp.Inspect(R__cl, R__parent, "trackVec", (void*)&trackVec);
      ::ROOT::GenericShowMembers("vector<int>", (void*)&trackVec, R__insp, strcat(R__parent,"trackVec."),false);
      R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Edep_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Edep_t : new ::Edep_t;
   }
   static void *newArray_Edep_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Edep_t[nElements] : new ::Edep_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_Edep_t(void *p) {
      delete ((::Edep_t*)p);
   }
   static void deleteArray_Edep_t(void *p) {
      delete [] ((::Edep_t*)p);
   }
   static void destruct_Edep_t(void *p) {
      typedef ::Edep_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Edep_t

//______________________________________________________________________________
void draytupleMIB_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class draytupleMIB_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(draytupleMIB_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(draytupleMIB_t::Class(),this);
   }
}

//______________________________________________________________________________
void draytupleMIB_t::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class draytupleMIB_t.
      TClass *R__cl = ::draytupleMIB_t::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "muvx", &muvx);
      R__insp.Inspect(R__cl, R__parent, "muvy", &muvy);
      R__insp.Inspect(R__cl, R__parent, "mupx", &mupx);
      R__insp.Inspect(R__cl, R__parent, "mupy", &mupy);
      R__insp.Inspect(R__cl, R__parent, "mupz", &mupz);
      R__insp.Inspect(R__cl, R__parent, "muweight", &muweight);
      R__insp.Inspect(R__cl, R__parent, "nimpwt", &nimpwt);
      R__insp.Inspect(R__cl, R__parent, "ptype", &ptype);
      R__insp.Inspect(R__cl, R__parent, "mmxpos[3]", mmxpos);
      R__insp.Inspect(R__cl, R__parent, "mmypos[3]", mmypos);
      R__insp.Inspect(R__cl, R__parent, "mmpx[3]", mmpx);
      R__insp.Inspect(R__cl, R__parent, "mmpy[3]", mmpy);
      R__insp.Inspect(R__cl, R__parent, "mmpz[3]", mmpz);
      R__insp.Inspect(R__cl, R__parent, "cell[3]", cell);
      R__insp.Inspect(R__cl, R__parent, "mm1_mu_edep", (void*)&mm1_mu_edep);
      ::ROOT::GenericShowMembers("draytupleMIB_t::IFMap", (void*)&mm1_mu_edep, R__insp, strcat(R__parent,"mm1_mu_edep."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mm2_mu_edep", (void*)&mm2_mu_edep);
      ::ROOT::GenericShowMembers("draytupleMIB_t::IFMap", (void*)&mm2_mu_edep, R__insp, strcat(R__parent,"mm2_mu_edep."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mm3_mu_edep", (void*)&mm3_mu_edep);
      ::ROOT::GenericShowMembers("draytupleMIB_t::IFMap", (void*)&mm3_mu_edep, R__insp, strcat(R__parent,"mm3_mu_edep."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mm1_int_edep", (void*)&mm1_int_edep);
      ::ROOT::GenericShowMembers("draytupleMIB_t::IEdepMap", (void*)&mm1_int_edep, R__insp, strcat(R__parent,"mm1_int_edep."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mm2_int_edep", (void*)&mm2_int_edep);
      ::ROOT::GenericShowMembers("draytupleMIB_t::IEdepMap", (void*)&mm2_int_edep, R__insp, strcat(R__parent,"mm2_int_edep."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mm3_int_edep", (void*)&mm3_int_edep);
      ::ROOT::GenericShowMembers("draytupleMIB_t::IEdepMap", (void*)&mm3_int_edep, R__insp, strcat(R__parent,"mm3_int_edep."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mm1_ext_edep", (void*)&mm1_ext_edep);
      ::ROOT::GenericShowMembers("draytupleMIB_t::IEdepMap", (void*)&mm1_ext_edep, R__insp, strcat(R__parent,"mm1_ext_edep."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mm2_ext_edep", (void*)&mm2_ext_edep);
      ::ROOT::GenericShowMembers("draytupleMIB_t::IEdepMap", (void*)&mm2_ext_edep, R__insp, strcat(R__parent,"mm2_ext_edep."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mm3_ext_edep", (void*)&mm3_ext_edep);
      ::ROOT::GenericShowMembers("draytupleMIB_t::IEdepMap", (void*)&mm3_ext_edep, R__insp, strcat(R__parent,"mm3_ext_edep."),false);
      R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_draytupleMIB_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::draytupleMIB_t : new ::draytupleMIB_t;
   }
   static void *newArray_draytupleMIB_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::draytupleMIB_t[nElements] : new ::draytupleMIB_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_draytupleMIB_t(void *p) {
      delete ((::draytupleMIB_t*)p);
   }
   static void deleteArray_draytupleMIB_t(void *p) {
      delete [] ((::draytupleMIB_t*)p);
   }
   static void destruct_draytupleMIB_t(void *p) {
      typedef ::draytupleMIB_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::draytupleMIB_t

//______________________________________________________________________________
void draytupleSPB_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class draytupleSPB_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(draytupleSPB_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(draytupleSPB_t::Class(),this);
   }
}

//______________________________________________________________________________
void draytupleSPB_t::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class draytupleSPB_t.
      TClass *R__cl = ::draytupleSPB_t::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "muvx", &muvx);
      R__insp.Inspect(R__cl, R__parent, "muvy", &muvy);
      R__insp.Inspect(R__cl, R__parent, "muvz", &muvz);
      R__insp.Inspect(R__cl, R__parent, "mupx", &mupx);
      R__insp.Inspect(R__cl, R__parent, "mupy", &mupy);
      R__insp.Inspect(R__cl, R__parent, "mupz", &mupz);
      R__insp.Inspect(R__cl, R__parent, "ptype", &ptype);
      R__insp.Inspect(R__cl, R__parent, "mmxpos[3]", mmxpos);
      R__insp.Inspect(R__cl, R__parent, "mmypos[3]", mmypos);
      R__insp.Inspect(R__cl, R__parent, "mmpx[3]", mmpx);
      R__insp.Inspect(R__cl, R__parent, "mmpy[3]", mmpy);
      R__insp.Inspect(R__cl, R__parent, "mmpz[3]", mmpz);
      R__insp.Inspect(R__cl, R__parent, "cell[3]", cell);
      R__insp.Inspect(R__cl, R__parent, "mu_edep[3]", mu_edep);
      R__insp.Inspect(R__cl, R__parent, "int_edep[3]", int_edep);
      R__insp.Inspect(R__cl, R__parent, "ext_edep[3]", ext_edep);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_draytupleSPB_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::draytupleSPB_t : new ::draytupleSPB_t;
   }
   static void *newArray_draytupleSPB_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::draytupleSPB_t[nElements] : new ::draytupleSPB_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_draytupleSPB_t(void *p) {
      delete ((::draytupleSPB_t*)p);
   }
   static void deleteArray_draytupleSPB_t(void *p) {
      delete [] ((::draytupleSPB_t*)p);
   }
   static void destruct_draytupleSPB_t(void *p) {
      typedef ::draytupleSPB_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::draytupleSPB_t

//______________________________________________________________________________
void absbkgtuple_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class absbkgtuple_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(absbkgtuple_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(absbkgtuple_t::Class(),this);
   }
}

//______________________________________________________________________________
void absbkgtuple_t::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class absbkgtuple_t.
      TClass *R__cl = ::absbkgtuple_t::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "ihorn", &ihorn);
      R__insp.Inspect(R__cl, R__parent, "tgtz", &tgtz);
      R__insp.Inspect(R__cl, R__parent, "ptype", &ptype);
      R__insp.Inspect(R__cl, R__parent, "x", &x);
      R__insp.Inspect(R__cl, R__parent, "y", &y);
      R__insp.Inspect(R__cl, R__parent, "z", &z);
      R__insp.Inspect(R__cl, R__parent, "px", &px);
      R__insp.Inspect(R__cl, R__parent, "py", &py);
      R__insp.Inspect(R__cl, R__parent, "pz", &pz);
      R__insp.Inspect(R__cl, R__parent, "KE", &KE);
      R__insp.Inspect(R__cl, R__parent, "impwt", &impwt);
      R__insp.Inspect(R__cl, R__parent, "tgen", &tgen);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_absbkgtuple_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::absbkgtuple_t : new ::absbkgtuple_t;
   }
   static void *newArray_absbkgtuple_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::absbkgtuple_t[nElements] : new ::absbkgtuple_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_absbkgtuple_t(void *p) {
      delete ((::absbkgtuple_t*)p);
   }
   static void deleteArray_absbkgtuple_t(void *p) {
      delete [] ((::absbkgtuple_t*)p);
   }
   static void destruct_absbkgtuple_t(void *p) {
      typedef ::absbkgtuple_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::absbkgtuple_t

//______________________________________________________________________________
void zptuple_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class zptuple_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(zptuple_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(zptuple_t::Class(),this);
   }
}

//______________________________________________________________________________
void zptuple_t::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class zptuple_t.
      TClass *R__cl = ::zptuple_t::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "run", &run);
      R__insp.Inspect(R__cl, R__parent, "evtno", &evtno);
      R__insp.Inspect(R__cl, R__parent, "xposatz", &xposatz);
      R__insp.Inspect(R__cl, R__parent, "yposatz", &yposatz);
      R__insp.Inspect(R__cl, R__parent, "zposatz", &zposatz);
      R__insp.Inspect(R__cl, R__parent, "xmomatz", &xmomatz);
      R__insp.Inspect(R__cl, R__parent, "ymomatz", &ymomatz);
      R__insp.Inspect(R__cl, R__parent, "zmomatz", &zmomatz);
      R__insp.Inspect(R__cl, R__parent, "matilen", &matilen);
      R__insp.Inspect(R__cl, R__parent, "field", &field);
      R__insp.Inspect(R__cl, R__parent, "pathlength", &pathlength);
      R__insp.Inspect(R__cl, R__parent, "ptypeatz", &ptypeatz);
      R__insp.Inspect(R__cl, R__parent, "pidtype", &pidtype);
      R__insp.Inspect(R__cl, R__parent, "zpoint", &zpoint);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_zptuple_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::zptuple_t : new ::zptuple_t;
   }
   static void *newArray_zptuple_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::zptuple_t[nElements] : new ::zptuple_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_zptuple_t(void *p) {
      delete ((::zptuple_t*)p);
   }
   static void deleteArray_zptuple_t(void *p) {
      delete [] ((::zptuple_t*)p);
   }
   static void destruct_zptuple_t(void *p) {
      typedef ::zptuple_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::zptuple_t

//______________________________________________________________________________
void target_exit_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class target_exit_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(target_exit_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(target_exit_t::Class(),this);
   }
}

//______________________________________________________________________________
void target_exit_t::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class target_exit_t.
      TClass *R__cl = ::target_exit_t::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "run", &run);
      R__insp.Inspect(R__cl, R__parent, "evtno", &evtno);
      R__insp.Inspect(R__cl, R__parent, "Nimpwt", &Nimpwt);
      R__insp.Inspect(R__cl, R__parent, "impwt", &impwt);
      R__insp.Inspect(R__cl, R__parent, "tvx", &tvx);
      R__insp.Inspect(R__cl, R__parent, "tvy", &tvy);
      R__insp.Inspect(R__cl, R__parent, "tvz", &tvz);
      R__insp.Inspect(R__cl, R__parent, "tpx", &tpx);
      R__insp.Inspect(R__cl, R__parent, "tpy", &tpy);
      R__insp.Inspect(R__cl, R__parent, "tpz", &tpz);
      R__insp.Inspect(R__cl, R__parent, "tptype", &tptype);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_target_exit_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::target_exit_t : new ::target_exit_t;
   }
   static void *newArray_target_exit_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::target_exit_t[nElements] : new ::target_exit_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_target_exit_t(void *p) {
      delete ((::target_exit_t*)p);
   }
   static void deleteArray_target_exit_t(void *p) {
      delete [] ((::target_exit_t*)p);
   }
   static void destruct_target_exit_t(void *p) {
      typedef ::target_exit_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::target_exit_t

//______________________________________________________________________________
void ProdTuple_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class ProdTuple_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ProdTuple_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(ProdTuple_t::Class(),this);
   }
}

//______________________________________________________________________________
void ProdTuple_t::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class ProdTuple_t.
      TClass *R__cl = ::ProdTuple_t::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "NPart", &NPart);
      R__insp.Inspect(R__cl, R__parent, "PDG[150]", PDG);
      R__insp.Inspect(R__cl, R__parent, "X[150][3]", X);
      R__insp.Inspect(R__cl, R__parent, "P[150][4]", P);
      R__insp.Inspect(R__cl, R__parent, "XF[150]", XF);
      R__insp.Inspect(R__cl, R__parent, "PT[150]", PT);
      R__insp.Inspect(R__cl, R__parent, "FF[150]", FF);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ProdTuple_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ProdTuple_t : new ::ProdTuple_t;
   }
   static void *newArray_ProdTuple_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ProdTuple_t[nElements] : new ::ProdTuple_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_ProdTuple_t(void *p) {
      delete ((::ProdTuple_t*)p);
   }
   static void deleteArray_ProdTuple_t(void *p) {
      delete [] ((::ProdTuple_t*)p);
   }
   static void destruct_ProdTuple_t(void *p) {
      typedef ::ProdTuple_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ProdTuple_t

//______________________________________________________________________________
void TrackInfo_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class TrackInfo_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TrackInfo_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(TrackInfo_t::Class(),this);
   }
}

//______________________________________________________________________________
void TrackInfo_t::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TrackInfo_t.
      TClass *R__cl = ::TrackInfo_t::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "Pos", &Pos);
      Pos.ShowMembers(R__insp, strcat(R__parent,"Pos.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Mom", &Mom);
      Mom.ShowMembers(R__insp, strcat(R__parent,"Mom.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "PDGcode", &PDGcode);
      R__insp.Inspect(R__cl, R__parent, "FromFast", &FromFast);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TrackInfo_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TrackInfo_t : new ::TrackInfo_t;
   }
   static void *newArray_TrackInfo_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TrackInfo_t[nElements] : new ::TrackInfo_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_TrackInfo_t(void *p) {
      delete ((::TrackInfo_t*)p);
   }
   static void deleteArray_TrackInfo_t(void *p) {
      delete [] ((::TrackInfo_t*)p);
   }
   static void destruct_TrackInfo_t(void *p) {
      typedef ::TrackInfo_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TrackInfo_t

namespace ROOT {
   void maplEintcOEdep_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEintcOEdep_tgR_Dictionary();
   static void *new_maplEintcOEdep_tgR(void *p = 0);
   static void *newArray_maplEintcOEdep_tgR(Long_t size, void *p);
   static void delete_maplEintcOEdep_tgR(void *p);
   static void deleteArray_maplEintcOEdep_tgR(void *p);
   static void destruct_maplEintcOEdep_tgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,Edep_t>*)
   {
      map<int,Edep_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,Edep_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,Edep_t>", -2, "prec_stl/map", 63,
                  typeid(map<int,Edep_t>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOEdep_tgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,Edep_t>) );
      instance.SetNew(&new_maplEintcOEdep_tgR);
      instance.SetNewArray(&newArray_maplEintcOEdep_tgR);
      instance.SetDelete(&delete_maplEintcOEdep_tgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOEdep_tgR);
      instance.SetDestructor(&destruct_maplEintcOEdep_tgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,Edep_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,Edep_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOEdep_tgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,Edep_t>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOEdep_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,Edep_t> : new map<int,Edep_t>;
   }
   static void *newArray_maplEintcOEdep_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,Edep_t>[nElements] : new map<int,Edep_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOEdep_tgR(void *p) {
      delete ((map<int,Edep_t>*)p);
   }
   static void deleteArray_maplEintcOEdep_tgR(void *p) {
      delete [] ((map<int,Edep_t>*)p);
   }
   static void destruct_maplEintcOEdep_tgR(void *p) {
      typedef map<int,Edep_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,Edep_t>

namespace ROOT {
   void maplEintcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEintcOfloatgR_Dictionary();
   static void *new_maplEintcOfloatgR(void *p = 0);
   static void *newArray_maplEintcOfloatgR(Long_t size, void *p);
   static void delete_maplEintcOfloatgR(void *p);
   static void deleteArray_maplEintcOfloatgR(void *p);
   static void destruct_maplEintcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,float>*)
   {
      map<int,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,float>", -2, "prec_stl/map", 63,
                  typeid(map<int,float>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,float>) );
      instance.SetNew(&new_maplEintcOfloatgR);
      instance.SetNewArray(&newArray_maplEintcOfloatgR);
      instance.SetDelete(&delete_maplEintcOfloatgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOfloatgR);
      instance.SetDestructor(&destruct_maplEintcOfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,float> : new map<int,float>;
   }
   static void *newArray_maplEintcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,float>[nElements] : new map<int,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOfloatgR(void *p) {
      delete ((map<int,float>*)p);
   }
   static void deleteArray_maplEintcOfloatgR(void *p) {
      delete [] ((map<int,float>*)p);
   }
   static void destruct_maplEintcOfloatgR(void *p) {
      typedef map<int,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,float>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

/********************************************************
* ./src/g4numiCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableg4numiCint();

extern "C" void G__set_cpp_environmentg4numiCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../include/data_t.hh");
  G__add_compiledheader("../include/hadmmtuple_t.hh");
  G__add_compiledheader("../include/draytupleSPB_t.hh");
  G__add_compiledheader("../include/Edep_t.hh");
  G__add_compiledheader("../include/draytupleMIB_t.hh");
  G__add_compiledheader("../include/absbkgtuple_t.hh");
  G__add_compiledheader("../include/zptuple_t.hh");
  G__add_compiledheader("../include/target_exit_t.hh");
  G__add_compiledheader("../include/ProdTuple_t.hh");
  G__add_compiledheader("../include/TrackInfo_t.hh");
  G__cpp_reset_tagtableg4numiCint();
}
#include <new>
extern "C" int G__cpp_dllrevg4numiCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* data_t */
static int G__g4numiCint_189_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   data_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new data_t[n];
     } else {
       p = new((void*) gvp) data_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new data_t;
     } else {
       p = new((void*) gvp) data_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_data_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_189_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((data_t*) G__getstructoffset())->Clear(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((data_t*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_189_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) data_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_189_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) data_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_189_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) data_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_189_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      data_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_189_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const data_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_189_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((data_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_189_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((data_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_189_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((data_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_189_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) data_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_189_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) data_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_189_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) data_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_189_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) data_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_189_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   data_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new data_t(*(data_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_data_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef data_t G__Tdata_t;
static int G__g4numiCint_189_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (data_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((data_t*) (soff+(sizeof(data_t)*i)))->~G__Tdata_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (data_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((data_t*) (soff))->~G__Tdata_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_189_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   data_t* dest = (data_t*) G__getstructoffset();
   *dest = *(data_t*) libp->para[0].ref;
   const data_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* hadmmtuple_t */
static int G__g4numiCint_190_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   hadmmtuple_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new hadmmtuple_t[n];
     } else {
       p = new((void*) gvp) hadmmtuple_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new hadmmtuple_t;
     } else {
       p = new((void*) gvp) hadmmtuple_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_190_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hadmmtuple_t*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_190_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) hadmmtuple_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_190_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) hadmmtuple_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) hadmmtuple_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      hadmmtuple_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_190_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const hadmmtuple_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_190_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hadmmtuple_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_190_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hadmmtuple_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_190_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hadmmtuple_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) hadmmtuple_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_190_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) hadmmtuple_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_190_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) hadmmtuple_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_190_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) hadmmtuple_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_190_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   hadmmtuple_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new hadmmtuple_t(*(hadmmtuple_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef hadmmtuple_t G__Thadmmtuple_t;
static int G__g4numiCint_190_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (hadmmtuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((hadmmtuple_t*) (soff+(sizeof(hadmmtuple_t)*i)))->~G__Thadmmtuple_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (hadmmtuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((hadmmtuple_t*) (soff))->~G__Thadmmtuple_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_190_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   hadmmtuple_t* dest = (hadmmtuple_t*) G__getstructoffset();
   *dest = *(hadmmtuple_t*) libp->para[0].ref;
   const hadmmtuple_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* draytupleSPB_t */
static int G__g4numiCint_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   draytupleSPB_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new draytupleSPB_t[n];
     } else {
       p = new((void*) gvp) draytupleSPB_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new draytupleSPB_t;
     } else {
       p = new((void*) gvp) draytupleSPB_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleSPB_t*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) draytupleSPB_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) draytupleSPB_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) draytupleSPB_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      draytupleSPB_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const draytupleSPB_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleSPB_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleSPB_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleSPB_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) draytupleSPB_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) draytupleSPB_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) draytupleSPB_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) draytupleSPB_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   draytupleSPB_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new draytupleSPB_t(*(draytupleSPB_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef draytupleSPB_t G__TdraytupleSPB_t;
static int G__g4numiCint_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (draytupleSPB_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((draytupleSPB_t*) (soff+(sizeof(draytupleSPB_t)*i)))->~G__TdraytupleSPB_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (draytupleSPB_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((draytupleSPB_t*) (soff))->~G__TdraytupleSPB_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   draytupleSPB_t* dest = (draytupleSPB_t*) G__getstructoffset();
   *dest = *(draytupleSPB_t*) libp->para[0].ref;
   const draytupleSPB_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Edep_t */
static int G__g4numiCint_427_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Edep_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Edep_t[n];
     } else {
       p = new((void*) gvp) Edep_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Edep_t;
     } else {
       p = new((void*) gvp) Edep_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_Edep_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_427_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Edep_t*) G__getstructoffset())->ClearVector();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_427_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Edep_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_427_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Edep_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_427_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Edep_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_427_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Edep_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_427_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Edep_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_427_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Edep_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_427_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Edep_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_427_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Edep_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_427_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Edep_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_427_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Edep_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_427_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Edep_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_427_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Edep_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_427_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Edep_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Edep_t(*(Edep_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_Edep_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Edep_t G__TEdep_t;
static int G__g4numiCint_427_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Edep_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Edep_t*) (soff+(sizeof(Edep_t)*i)))->~G__TEdep_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Edep_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Edep_t*) (soff))->~G__TEdep_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_427_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Edep_t* dest = (Edep_t*) G__getstructoffset();
   *dest = *(Edep_t*) libp->para[0].ref;
   const Edep_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* draytupleMIB_t */
static int G__g4numiCint_432_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   draytupleMIB_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new draytupleMIB_t[n];
     } else {
       p = new((void*) gvp) draytupleMIB_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new draytupleMIB_t;
     } else {
       p = new((void*) gvp) draytupleMIB_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const draytupleMIB_t*) G__getstructoffset())->GetMuEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const draytupleMIB_t*) G__getstructoffset())->GetIntEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, *(string*) libp->para[2].ref));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const draytupleMIB_t*) G__getstructoffset())->GetIntEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const draytupleMIB_t*) G__getstructoffset())->GetExtEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, *(string*) libp->para[2].ref));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const draytupleMIB_t*) G__getstructoffset())->GetExtEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->SetMuEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->SetIntEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const double) G__double(libp->para[2]), (const int) G__int(libp->para[3])
, (const double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->SetExtEdep((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const double) G__double(libp->para[2]), (const int) G__int(libp->para[3])
, (const double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->ClearTrackIDVectors();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) draytupleMIB_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) draytupleMIB_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) draytupleMIB_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      draytupleMIB_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const draytupleMIB_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((draytupleMIB_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) draytupleMIB_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) draytupleMIB_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) draytupleMIB_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_432_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) draytupleMIB_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_432_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   draytupleMIB_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new draytupleMIB_t(*(draytupleMIB_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef draytupleMIB_t G__TdraytupleMIB_t;
static int G__g4numiCint_432_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (draytupleMIB_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((draytupleMIB_t*) (soff+(sizeof(draytupleMIB_t)*i)))->~G__TdraytupleMIB_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (draytupleMIB_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((draytupleMIB_t*) (soff))->~G__TdraytupleMIB_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_432_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   draytupleMIB_t* dest = (draytupleMIB_t*) G__getstructoffset();
   *dest = *(draytupleMIB_t*) libp->para[0].ref;
   const draytupleMIB_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* absbkgtuple_t */
static int G__g4numiCint_447_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   absbkgtuple_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new absbkgtuple_t[n];
     } else {
       p = new((void*) gvp) absbkgtuple_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new absbkgtuple_t;
     } else {
       p = new((void*) gvp) absbkgtuple_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_447_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((absbkgtuple_t*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_447_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) absbkgtuple_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_447_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) absbkgtuple_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_447_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) absbkgtuple_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_447_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      absbkgtuple_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_447_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const absbkgtuple_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_447_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((absbkgtuple_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_447_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((absbkgtuple_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_447_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((absbkgtuple_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_447_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) absbkgtuple_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_447_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) absbkgtuple_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_447_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) absbkgtuple_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_447_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) absbkgtuple_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_447_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   absbkgtuple_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new absbkgtuple_t(*(absbkgtuple_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef absbkgtuple_t G__Tabsbkgtuple_t;
static int G__g4numiCint_447_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (absbkgtuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((absbkgtuple_t*) (soff+(sizeof(absbkgtuple_t)*i)))->~G__Tabsbkgtuple_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (absbkgtuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((absbkgtuple_t*) (soff))->~G__Tabsbkgtuple_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_447_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   absbkgtuple_t* dest = (absbkgtuple_t*) G__getstructoffset();
   *dest = *(absbkgtuple_t*) libp->para[0].ref;
   const absbkgtuple_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* zptuple_t */
static int G__g4numiCint_448_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   zptuple_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new zptuple_t[n];
     } else {
       p = new((void*) gvp) zptuple_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new zptuple_t;
     } else {
       p = new((void*) gvp) zptuple_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_448_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) zptuple_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_448_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) zptuple_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_448_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) zptuple_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_448_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      zptuple_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_448_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const zptuple_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_448_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((zptuple_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_448_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((zptuple_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_448_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((zptuple_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_448_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) zptuple_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_448_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) zptuple_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_448_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) zptuple_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_448_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) zptuple_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_448_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   zptuple_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new zptuple_t(*(zptuple_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef zptuple_t G__Tzptuple_t;
static int G__g4numiCint_448_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (zptuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((zptuple_t*) (soff+(sizeof(zptuple_t)*i)))->~G__Tzptuple_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (zptuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((zptuple_t*) (soff))->~G__Tzptuple_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_448_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   zptuple_t* dest = (zptuple_t*) G__getstructoffset();
   *dest = *(zptuple_t*) libp->para[0].ref;
   const zptuple_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* target_exit_t */
static int G__g4numiCint_449_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   target_exit_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new target_exit_t[n];
     } else {
       p = new((void*) gvp) target_exit_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new target_exit_t;
     } else {
       p = new((void*) gvp) target_exit_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_target_exit_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_449_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) target_exit_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_449_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) target_exit_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_449_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) target_exit_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_449_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      target_exit_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_449_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const target_exit_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_449_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((target_exit_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_449_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((target_exit_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_449_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((target_exit_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_449_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) target_exit_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_449_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) target_exit_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_449_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) target_exit_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_449_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) target_exit_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_449_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   target_exit_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new target_exit_t(*(target_exit_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_target_exit_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef target_exit_t G__Ttarget_exit_t;
static int G__g4numiCint_449_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (target_exit_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((target_exit_t*) (soff+(sizeof(target_exit_t)*i)))->~G__Ttarget_exit_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (target_exit_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((target_exit_t*) (soff))->~G__Ttarget_exit_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_449_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   target_exit_t* dest = (target_exit_t*) G__getstructoffset();
   *dest = *(target_exit_t*) libp->para[0].ref;
   const target_exit_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ProdTuple_t */
static int G__g4numiCint_450_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ProdTuple_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ProdTuple_t[n];
     } else {
       p = new((void*) gvp) ProdTuple_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ProdTuple_t;
     } else {
       p = new((void*) gvp) ProdTuple_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_450_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ProdTuple_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_450_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ProdTuple_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_450_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ProdTuple_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_450_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ProdTuple_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_450_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ProdTuple_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_450_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ProdTuple_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_450_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ProdTuple_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_450_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ProdTuple_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_450_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ProdTuple_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_450_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ProdTuple_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_450_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ProdTuple_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_450_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ProdTuple_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_450_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ProdTuple_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ProdTuple_t(*(ProdTuple_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ProdTuple_t G__TProdTuple_t;
static int G__g4numiCint_450_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ProdTuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ProdTuple_t*) (soff+(sizeof(ProdTuple_t)*i)))->~G__TProdTuple_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ProdTuple_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ProdTuple_t*) (soff))->~G__TProdTuple_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_450_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ProdTuple_t* dest = (ProdTuple_t*) G__getstructoffset();
   *dest = *(ProdTuple_t*) libp->para[0].ref;
   const ProdTuple_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TrackInfo_t */
static int G__g4numiCint_493_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackInfo_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackInfo_t[n];
     } else {
       p = new((void*) gvp) TrackInfo_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackInfo_t;
     } else {
       p = new((void*) gvp) TrackInfo_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_493_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TrackInfo_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_493_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_493_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TrackInfo_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_493_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TrackInfo_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_493_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TrackInfo_t*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_493_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackInfo_t*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_493_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackInfo_t*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_493_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackInfo_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_493_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_493_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackInfo_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_493_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackInfo_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__g4numiCint_493_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackInfo_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__g4numiCint_493_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TrackInfo_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TrackInfo_t(*(TrackInfo_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TrackInfo_t G__TTrackInfo_t;
static int G__g4numiCint_493_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TrackInfo_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TrackInfo_t*) (soff+(sizeof(TrackInfo_t)*i)))->~G__TTrackInfo_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TrackInfo_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TrackInfo_t*) (soff))->~G__TTrackInfo_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__g4numiCint_493_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackInfo_t* dest = (TrackInfo_t*) G__getstructoffset();
   *dest = *(TrackInfo_t*) libp->para[0].ref;
   const TrackInfo_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* data_t */

/* hadmmtuple_t */

/* draytupleSPB_t */

/* Edep_t */

/* draytupleMIB_t */

/* absbkgtuple_t */

/* zptuple_t */

/* target_exit_t */

/* ProdTuple_t */

/* TrackInfo_t */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncg4numiCint {
 public:
  G__Sizep2memfuncg4numiCint(): p(&G__Sizep2memfuncg4numiCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncg4numiCint::*p)();
};

size_t G__get_sizep2memfuncg4numiCint()
{
  G__Sizep2memfuncg4numiCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceg4numiCint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableg4numiCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__g4numiCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,float>",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,float,less<int> >",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IFMap",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IVec",117,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Edep_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Edep_t,less<int> >",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IEdepMap",117,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),0,G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__g4numiCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* data_t */
static void G__setup_memvardata_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_data_t));
   { data_t *p; p=(data_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtno)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"evtno=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamHWidth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamHWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamVWidth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamVWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->beamY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beamY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonPx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonPx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonPy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonPy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->protonPz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"protonPz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nuTarZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"nuTarZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hornCurrent)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"hornCurrent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ndxdz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Ndxdz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ndydz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Ndydz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Npz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Npz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nenergy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Nenergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NdxdzNear)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NdxdzNear[11]=",0,"was 9");
   G__memvar_setup((void*)((long)(&p->NdydzNear)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NdydzNear[11]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NenergyN)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NenergyN[11]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NWtNear)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NWtNear[11]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NdxdzFar)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NdxdzFar[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NdydzFar)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NdydzFar[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NenergyF)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NenergyF[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NWtFar)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"NWtFar[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Norig)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Norig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ndecay)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Ndecay=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ntype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Ntype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Vz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdPx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pdPx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdPy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pdPy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdPz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pdPz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppdxdz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppdxdz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppdydz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppdydz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pppz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pppz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppenergy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppenergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppmedium)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppmedium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ppvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muparpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muparpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muparpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muparpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muparpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muparpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupare)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mupare=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Necm)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Necm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nimpwt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Nimpwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xpoint)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"xpoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ypoint)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ypoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zpoint)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"zpoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tptype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tgen)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tgen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ntrajectory)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ntrajectory=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->overflow)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"overflow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pdg[10]=",0,"particle pdg code");
   G__memvar_setup((void*)((long)(&p->trackId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trackId[10]=",0,"particle trackId ");
   G__memvar_setup((void*)((long)(&p->parentId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"parentId[10]=",0,"parentId ");
   G__memvar_setup((void*)((long)(&p->startx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startx[10]=",0,"particle x initial position, mm");
   G__memvar_setup((void*)((long)(&p->starty)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"starty[10]=",0,"particle y initial position");
   G__memvar_setup((void*)((long)(&p->startz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startz[10]=",0,"particle z initial position");
   G__memvar_setup((void*)((long)(&p->stopx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stopx[10]=",0,"particle x final position");
   G__memvar_setup((void*)((long)(&p->stopy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stopy[10]=",0,"particle y final position");
   G__memvar_setup((void*)((long)(&p->stopz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stopz[10]=",0,"particle z final position");
   G__memvar_setup((void*)((long)(&p->startpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startpx[10]=",0,"particle x initial momentum, MeV/c");
   G__memvar_setup((void*)((long)(&p->startpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startpy[10]=",0,"particle y initial momentum");
   G__memvar_setup((void*)((long)(&p->startpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"startpz[10]=",0,"particle z initial momentum");
   G__memvar_setup((void*)((long)(&p->stoppx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stoppx[10]=",0,"particle x final momentum");
   G__memvar_setup((void*)((long)(&p->stoppy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stoppy[10]=",0,"particle y final momentum");
   G__memvar_setup((void*)((long)(&p->stoppz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"stoppz[10]=",0,"particle z final momentum");
   G__memvar_setup((void*)((long)(&p->pprodpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pprodpx[10]=",0,"parent x momentum when producing this particle, MeV/c");
   G__memvar_setup((void*)((long)(&p->pprodpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pprodpy[10]=",0,"parent y momentum when producing this particle");
   G__memvar_setup((void*)((long)(&p->pprodpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pprodpz[10]=",0,"parent z momentum when producing this particle");
   G__memvar_setup((void*)((long)(&p->proc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TString),-1,-1,1,"proc[10]=",0,"name of the process that creates this particle");
   G__memvar_setup((void*)((long)(&p->ivol)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TString),-1,-1,1,"ivol[10]=",0,"name of the volume where the particle starts");
   G__memvar_setup((void*)((long)(&p->fvol)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TString),-1,-1,1,"fvol[10]=",0,"name of the volume where the particle stops");
   G__memvar_setup((void*)((long)(&p->trkx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkx[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trky)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trky[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkz[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkpx[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkpy[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"trkpz[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* hadmmtuple_t */
static void G__setup_memvarhadmmtuple_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t));
   { hadmmtuple_t *p; p=(hadmmtuple_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtno)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"evtno=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muweight)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muweight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpptype)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"tpptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nimpwt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"nimpwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ppvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ppvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ppvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdpx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdpy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdpz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pdpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pptype)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"pptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptype)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"ptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppmedium)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"ppmedium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pgen)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"pgen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmxpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmxpos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmypos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpz[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cell)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"cell[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpx_Edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpx_Edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpy_Edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpy_Edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpz_Edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpz_Edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* draytupleSPB_t */
static void G__setup_memvardraytupleSPB_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t));
   { draytupleSPB_t *p; p=(draytupleSPB_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptype)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"ptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmxpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmxpos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmypos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpz[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cell)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"cell[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mu_edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mu_edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->int_edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"int_edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ext_edep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ext_edep[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Edep_t */
static void G__setup_memvarEdep_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_Edep_t));
   { Edep_t *p; p=(Edep_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTracks)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"nTracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->wghtedNTracks)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"wghtedNTracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumEdepWghts)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sumEdepWghts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumWghtdEdep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sumWghtdEdep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumWghtdEdep2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sumWghtdEdep2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackVec)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"trackVec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* draytupleMIB_t */
static void G__setup_memvardraytupleMIB_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   { draytupleMIB_t *p; p=(draytupleMIB_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muvy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"muvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mupz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mupz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muweight)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muweight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nimpwt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"nimpwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptype)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"ptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmxpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmxpos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmypos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmypos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmpz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mmpz[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cell)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"cell[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),G__defined_typename("IFMap"),-1,4,"mm1_mu_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),G__defined_typename("IFMap"),-1,4,"mm2_mu_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),G__defined_typename("IFMap"),-1,4,"mm3_mu_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),G__defined_typename("IEdepMap"),-1,4,"mm1_int_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),G__defined_typename("IEdepMap"),-1,4,"mm2_int_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),G__defined_typename("IEdepMap"),-1,4,"mm3_int_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),G__defined_typename("IEdepMap"),-1,4,"mm1_ext_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),G__defined_typename("IEdepMap"),-1,4,"mm2_ext_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR),G__defined_typename("IEdepMap"),-1,4,"mm3_ext_edep=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* absbkgtuple_t */
static void G__setup_memvarabsbkgtuple_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t));
   { absbkgtuple_t *p; p=(absbkgtuple_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ihorn)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ihorn=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tgtz)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tgtz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ptype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->px)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->py)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KE)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"KE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->impwt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"impwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tgen)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tgen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* zptuple_t */
static void G__setup_memvarzptuple_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t));
   { zptuple_t *p; p=(zptuple_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtno)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"evtno=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xposatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"xposatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->yposatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"yposatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zposatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"zposatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xmomatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"xmomatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ymomatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ymomatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zmomatz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"zmomatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->matilen)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"matilen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->field)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"field=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pathlength)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pathlength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptypeatz)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ptypeatz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pidtype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pidtype=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zpoint)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"zpoint=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* target_exit_t */
static void G__setup_memvartarget_exit_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_target_exit_t));
   { target_exit_t *p; p=(target_exit_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtno)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"evtno=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nimpwt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Nimpwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->impwt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"impwt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tvz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tvz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tpz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tptype)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tptype=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ProdTuple_t */
static void G__setup_memvarProdTuple_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t));
   { ProdTuple_t *p; p=(ProdTuple_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NPart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NPart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PDG)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PDG[150]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->X)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"X[150][3]=",0,"Initial position of the track");
   G__memvar_setup((void*)((long)(&p->P)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"P[150][4]=",0,"4-momentum. P[maxPart][3] is the energy");
   G__memvar_setup((void*)((long)(&p->XF)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"XF[150]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"PT[150]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FF)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"FF[150]=",0,"true if particle was produced by a quickly decaying particle which G4 explicitly produces (tau<1e-16 sec: pi0, eta, eta', sigma0)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TrackInfo_t */
static void G__setup_memvarTrackInfo_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t));
   { TrackInfo_t *p; p=(TrackInfo_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TVector3),-1,-1,1,"Pos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TLorentzVector),-1,-1,1,"Mom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PDGcode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PDGcode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FromFast)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"FromFast=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__g4numiCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarg4numiCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncdata_t(void) {
   /* data_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_data_t));
   G__memfunc_setup("data_t",621,G__g4numiCint_189_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_data_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__g4numiCint_189_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_189_0_3, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&data_t::Class), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_189_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&data_t::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_189_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&data_t::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_189_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&data_t::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_189_0_7, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_189_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_189_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_189_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_189_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&data_t::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_189_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&data_t::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_189_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&data_t::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_189_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&data_t::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("data_t", 621, G__g4numiCint_189_0_15, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_data_t), -1, 0, 1, 1, 1, 0, "u 'data_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~data_t", 747, G__g4numiCint_189_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_189_0_17, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_data_t), -1, 1, 1, 1, 1, 0, "u 'data_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunchadmmtuple_t(void) {
   /* hadmmtuple_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t));
   G__memfunc_setup("hadmmtuple_t",1284,G__g4numiCint_190_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__g4numiCint_190_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_190_0_3, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&hadmmtuple_t::Class), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_190_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&hadmmtuple_t::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_190_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&hadmmtuple_t::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_190_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&hadmmtuple_t::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_190_0_7, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_190_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_190_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_190_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_190_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&hadmmtuple_t::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_190_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&hadmmtuple_t::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_190_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&hadmmtuple_t::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_190_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&hadmmtuple_t::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("hadmmtuple_t", 1284, G__g4numiCint_190_0_15, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t), -1, 0, 1, 1, 1, 0, "u 'hadmmtuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~hadmmtuple_t", 1410, G__g4numiCint_190_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_190_0_17, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t), -1, 1, 1, 1, 1, 0, "u 'hadmmtuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdraytupleSPB_t(void) {
   /* draytupleSPB_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t));
   G__memfunc_setup("draytupleSPB_t",1426,G__g4numiCint_191_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__g4numiCint_191_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_191_0_3, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&draytupleSPB_t::Class), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_191_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&draytupleSPB_t::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_191_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&draytupleSPB_t::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_191_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&draytupleSPB_t::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_191_0_7, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_191_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_191_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_191_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_191_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&draytupleSPB_t::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_191_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&draytupleSPB_t::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_191_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&draytupleSPB_t::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_191_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&draytupleSPB_t::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("draytupleSPB_t", 1426, G__g4numiCint_191_0_15, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t), -1, 0, 1, 1, 1, 0, "u 'draytupleSPB_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~draytupleSPB_t", 1552, G__g4numiCint_191_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_191_0_17, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t), -1, 1, 1, 1, 1, 0, "u 'draytupleSPB_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEdep_t(void) {
   /* Edep_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_Edep_t));
   G__memfunc_setup("Edep_t",593,G__g4numiCint_427_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_Edep_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearVector",1114,G__g4numiCint_427_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_427_0_3, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&Edep_t::Class), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_427_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&Edep_t::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_427_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&Edep_t::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_427_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&Edep_t::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_427_0_7, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_427_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_427_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_427_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_427_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&Edep_t::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_427_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&Edep_t::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_427_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&Edep_t::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_427_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&Edep_t::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("Edep_t", 593, G__g4numiCint_427_0_15, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_Edep_t), -1, 0, 1, 1, 1, 0, "u 'Edep_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Edep_t", 719, G__g4numiCint_427_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_427_0_17, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_Edep_t), -1, 1, 1, 1, 1, 0, "u 'Edep_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdraytupleMIB_t(void) {
   /* draytupleMIB_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t));
   G__memfunc_setup("draytupleMIB_t",1413,G__g4numiCint_432_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__g4numiCint_432_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuEdep",864,G__g4numiCint_432_0_3, 100, -1, -1, 0, 2, 1, 1, 9, 
"i - - 10 - mon i - - 10 - cell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntEdep",969,G__g4numiCint_432_0_4, 100, -1, -1, 0, 3, 1, 1, 9, 
"i - - 10 - mon i - - 10 - cell "
"u 'string' - 11 '\"edep\"' varname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExtEdep",975,G__g4numiCint_432_0_5, 100, -1, -1, 0, 3, 1, 1, 9, 
"i - - 10 - mon i - - 10 - cell "
"u 'string' - 11 '\"edep\"' varname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMuEdep",876,G__g4numiCint_432_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 10 - mon i - - 10 - cell "
"d - - 10 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntEdep",981,G__g4numiCint_432_0_7, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 10 - mon i - - 10 - cell "
"d - - 10 - value i - - 10 - trackID "
"d - - 10 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExtEdep",987,G__g4numiCint_432_0_8, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 10 - mon i - - 10 - cell "
"d - - 10 - value i - - 10 - trackID "
"d - - 10 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearTrackIDVectors",1871,G__g4numiCint_432_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearVectors",1229,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'map<int,Edep_t,less<int>,allocator<pair<const int,Edep_t> > >' 'draytupleMIB_t::IEdepMap' 1 - Map", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_432_0_11, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&draytupleMIB_t::Class), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_432_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&draytupleMIB_t::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_432_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&draytupleMIB_t::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_432_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&draytupleMIB_t::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_432_0_15, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_432_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_432_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_432_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_432_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&draytupleMIB_t::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_432_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&draytupleMIB_t::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_432_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&draytupleMIB_t::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_432_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&draytupleMIB_t::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("draytupleMIB_t", 1413, G__g4numiCint_432_0_23, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t), -1, 0, 1, 1, 1, 0, "u 'draytupleMIB_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~draytupleMIB_t", 1539, G__g4numiCint_432_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_432_0_25, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t), -1, 1, 1, 1, 1, 0, "u 'draytupleMIB_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncabsbkgtuple_t(void) {
   /* absbkgtuple_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t));
   G__memfunc_setup("absbkgtuple_t",1383,G__g4numiCint_447_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__g4numiCint_447_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_447_0_3, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&absbkgtuple_t::Class), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_447_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&absbkgtuple_t::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_447_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&absbkgtuple_t::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_447_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&absbkgtuple_t::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_447_0_7, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_447_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_447_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_447_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_447_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&absbkgtuple_t::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_447_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&absbkgtuple_t::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_447_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&absbkgtuple_t::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_447_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&absbkgtuple_t::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("absbkgtuple_t", 1383, G__g4numiCint_447_0_15, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t), -1, 0, 1, 1, 1, 0, "u 'absbkgtuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~absbkgtuple_t", 1509, G__g4numiCint_447_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_447_0_17, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t), -1, 1, 1, 1, 1, 0, "u 'absbkgtuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunczptuple_t(void) {
   /* zptuple_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t));
   G__memfunc_setup("zptuple_t",999,G__g4numiCint_448_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_448_0_2, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&zptuple_t::Class), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_448_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&zptuple_t::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_448_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&zptuple_t::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_448_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&zptuple_t::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_448_0_6, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_448_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_448_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_448_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_448_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&zptuple_t::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_448_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&zptuple_t::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_448_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&zptuple_t::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_448_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&zptuple_t::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("zptuple_t", 999, G__g4numiCint_448_0_14, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t), -1, 0, 1, 1, 1, 0, "u 'zptuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~zptuple_t", 1125, G__g4numiCint_448_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_448_0_16, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t), -1, 1, 1, 1, 1, 0, "u 'zptuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunctarget_exit_t(void) {
   /* target_exit_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_target_exit_t));
   G__memfunc_setup("target_exit_t",1395,G__g4numiCint_449_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_target_exit_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_449_0_2, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&target_exit_t::Class), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_449_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&target_exit_t::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_449_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&target_exit_t::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_449_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&target_exit_t::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_449_0_6, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_449_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_449_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_449_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_449_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&target_exit_t::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_449_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&target_exit_t::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_449_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&target_exit_t::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_449_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&target_exit_t::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("target_exit_t", 1395, G__g4numiCint_449_0_14, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_target_exit_t), -1, 0, 1, 1, 1, 0, "u 'target_exit_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~target_exit_t", 1521, G__g4numiCint_449_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_449_0_16, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_target_exit_t), -1, 1, 1, 1, 1, 0, "u 'target_exit_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncProdTuple_t(void) {
   /* ProdTuple_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t));
   G__memfunc_setup("ProdTuple_t",1138,G__g4numiCint_450_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_450_0_2, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&ProdTuple_t::Class), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_450_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&ProdTuple_t::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_450_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&ProdTuple_t::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_450_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&ProdTuple_t::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_450_0_6, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_450_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_450_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_450_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_450_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&ProdTuple_t::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_450_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&ProdTuple_t::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_450_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&ProdTuple_t::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_450_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&ProdTuple_t::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("ProdTuple_t", 1138, G__g4numiCint_450_0_14, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t), -1, 0, 1, 1, 1, 0, "u 'ProdTuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ProdTuple_t", 1264, G__g4numiCint_450_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_450_0_16, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t), -1, 1, 1, 1, 1, 0, "u 'ProdTuple_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrackInfo_t(void) {
   /* TrackInfo_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t));
   G__memfunc_setup("TrackInfo_t",1108,G__g4numiCint_493_0_1, 105, G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__g4numiCint_493_0_2, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TrackInfo_t::Class), 0);
   G__memfunc_setup("Class_Name",982,G__g4numiCint_493_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TrackInfo_t::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__g4numiCint_493_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TrackInfo_t::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__g4numiCint_493_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TrackInfo_t::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__g4numiCint_493_0_6, 85, G__get_linked_tagnum(&G__g4numiCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__g4numiCint_493_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__g4numiCint_493_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__g4numiCint_493_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__g4numiCint_493_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TrackInfo_t::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__g4numiCint_493_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TrackInfo_t::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__g4numiCint_493_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TrackInfo_t::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__g4numiCint_493_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TrackInfo_t::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TrackInfo_t", 1108, G__g4numiCint_493_0_14, (int) ('i'), G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t), -1, 0, 1, 1, 1, 0, "u 'TrackInfo_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackInfo_t", 1234, G__g4numiCint_493_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__g4numiCint_493_0_16, (int) ('u'), G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t), -1, 1, 1, 1, 1, 0, "u 'TrackInfo_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncg4numiCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalg4numiCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcg4numiCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__g4numiCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__g4numiCintLN_data_t = { "data_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_hadmmtuple_t = { "hadmmtuple_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_draytupleSPB_t = { "draytupleSPB_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_Edep_t = { "Edep_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_draytupleMIB_t = { "draytupleMIB_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR = { "map<int,float,less<int>,allocator<pair<const int,float> > >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR = { "map<int,Edep_t,less<int>,allocator<pair<const int,Edep_t> > >" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_absbkgtuple_t = { "absbkgtuple_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_zptuple_t = { "zptuple_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_target_exit_t = { "target_exit_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_ProdTuple_t = { "ProdTuple_t" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__g4numiCintLN_TrackInfo_t = { "TrackInfo_t" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableg4numiCint() {
  G__g4numiCintLN_TClass.tagnum = -1 ;
  G__g4numiCintLN_TBuffer.tagnum = -1 ;
  G__g4numiCintLN_TMemberInspector.tagnum = -1 ;
  G__g4numiCintLN_string.tagnum = -1 ;
  G__g4numiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__g4numiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__g4numiCintLN_TString.tagnum = -1 ;
  G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__g4numiCintLN_data_t.tagnum = -1 ;
  G__g4numiCintLN_hadmmtuple_t.tagnum = -1 ;
  G__g4numiCintLN_draytupleSPB_t.tagnum = -1 ;
  G__g4numiCintLN_Edep_t.tagnum = -1 ;
  G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__g4numiCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__g4numiCintLN_draytupleMIB_t.tagnum = -1 ;
  G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR.tagnum = -1 ;
  G__g4numiCintLN_absbkgtuple_t.tagnum = -1 ;
  G__g4numiCintLN_zptuple_t.tagnum = -1 ;
  G__g4numiCintLN_target_exit_t.tagnum = -1 ;
  G__g4numiCintLN_ProdTuple_t.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__g4numiCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__g4numiCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__g4numiCintLN_TVector3.tagnum = -1 ;
  G__g4numiCintLN_TLorentzVector.tagnum = -1 ;
  G__g4numiCintLN_TrackInfo_t.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableg4numiCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_string);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TString);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__g4numiCintLN_data_t),sizeof(data_t),-1,263424,"data_t",G__setup_memvardata_t,G__setup_memfuncdata_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__g4numiCintLN_hadmmtuple_t),sizeof(hadmmtuple_t),-1,263424,(char*)NULL,G__setup_memvarhadmmtuple_t,G__setup_memfunchadmmtuple_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__g4numiCintLN_draytupleSPB_t),sizeof(draytupleSPB_t),-1,263424,(char*)NULL,G__setup_memvardraytupleSPB_t,G__setup_memfuncdraytupleSPB_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__g4numiCintLN_Edep_t),sizeof(Edep_t),-1,263424,(char*)NULL,G__setup_memvarEdep_t,G__setup_memfuncEdep_t);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__g4numiCintLN_draytupleMIB_t),sizeof(draytupleMIB_t),-1,263424,(char*)NULL,G__setup_memvardraytupleMIB_t,G__setup_memfuncdraytupleMIB_t);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_maplEintcOEdep_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOEdep_tgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__g4numiCintLN_absbkgtuple_t),sizeof(absbkgtuple_t),-1,263424,"absbkgtuple_t",G__setup_memvarabsbkgtuple_t,G__setup_memfuncabsbkgtuple_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__g4numiCintLN_zptuple_t),sizeof(zptuple_t),-1,263424,(char*)NULL,G__setup_memvarzptuple_t,G__setup_memfunczptuple_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__g4numiCintLN_target_exit_t),sizeof(target_exit_t),-1,263424,"target_exit_t",G__setup_memvartarget_exit_t,G__setup_memfunctarget_exit_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__g4numiCintLN_ProdTuple_t),sizeof(ProdTuple_t),-1,263424,(char*)NULL,G__setup_memvarProdTuple_t,G__setup_memfuncProdTuple_t);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TVector3);
   G__get_linked_tagnum_fwd(&G__g4numiCintLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum(&G__g4numiCintLN_TrackInfo_t),sizeof(TrackInfo_t),-1,263424,(char*)NULL,G__setup_memvarTrackInfo_t,G__setup_memfuncTrackInfo_t);
}
extern "C" void G__cpp_setupg4numiCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupg4numiCint()");
  G__set_cpp_environmentg4numiCint();
  G__cpp_setup_tagtableg4numiCint();

  G__cpp_setup_inheritanceg4numiCint();

  G__cpp_setup_typetableg4numiCint();

  G__cpp_setup_memvarg4numiCint();

  G__cpp_setup_memfuncg4numiCint();
  G__cpp_setup_globalg4numiCint();
  G__cpp_setup_funcg4numiCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncg4numiCint();
  return;
}
class G__cpp_setup_initg4numiCint {
  public:
    G__cpp_setup_initg4numiCint() { G__add_setup_func("g4numiCint",(G__incsetup)(&G__cpp_setupg4numiCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initg4numiCint() { G__remove_setup_func("g4numiCint"); }
};
G__cpp_setup_initg4numiCint G__cpp_setup_initializerg4numiCint;

