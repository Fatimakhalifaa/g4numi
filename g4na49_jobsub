#!/bin/sh
#

thisscript=`basename $0`
fullargs="$@"

# utils
RP=${MINOS_CONDOR}/scripts/realpath/realpath_mod.pl

# groups file
GROUPFILE=${MINOS_CONDOR}/etc/minos_groups.cfg

# Usage info
function print_advice {
  echo "Type '"${thisscript}" -h' for help."
}
function print_usage {
  echo "Usage: "${thisscript}" executable [exec_args]"
  echo "Possible [args]:"
  echo
  echo "    -h             Print this help."
  echo
  echo "    -q             Only send email notification if the job ends"
  echo "                   with an error.  (Default is always to email.)"
  echo
  echo "    -Q             No email notification ever."
  echo
  echo "    -L             Log file to hold log output from job."
  echo
}

# Got $CONDOR_TMP?
if [ -z "${CONDOR_TMP}" ]
then
  echo "WARNING: \$CONDOR_TMP is undefined.  This shouldn't be the case."
  CONDOR_TMP=/minerva/app/users/condor-tmp/${LOGNAME}
  echo "  Assuming CONDOR_TMP="${CONDOR_TMP}
fi

# Got $CONDOR_EXEC?
if [ -z "${CONDOR_EXEC}" ]
then
  echo "WARNING: \$CONDOR_EXEC is undefined.  This shouldn't be the case."
  CONDOR_EXEC=/minerva/app/users/condor-exec/${LOGNAME}
  echo "  Assuming CONDOR_EXEC="${CONDOR_EXEC}
fi

#defaults
NOTIFY=2
SUBMIT=1
REQUIREMENTS="((Arch==\"X86_64\") || (Arch==\"INTEL\"))"
ENVIRONMENT="PROCESS=\$(Process);CONDOR_TMP=${CONDOR_TMP};CONDOR_EXEC=${CONDOR_EXEC}"
JOBLOGFILE=""

if [ $# -gt 0 ]
then
  USEREXEC=$1
  shift 1
else
  echo ${thisscript}": no executable specified"
  print_advice
  exit 1
fi

if [ $# -gt 0 ]
then
  G4MACRO=$1
  shift 1
else
  echo ${thisscript}": no macro specified"
  print_advice
  exit 1
fi

while [ $# -gt 0 ]
do
    case $1 in
      -h)
  	print_usage
  	exit 1
  	;;
      -q)
  	NOTIFY=1
  	shift 1
  	;;
      -Q)
  	NOTIFY=0
  	shift 1
  	;;
      -L)
  	JOBLOGFILE=$2
  	shift 2
  	;;
      *)
  	echo ${thisscript}": invalid option -- "$1
        print_advice
  	exit 1
  	;;
    esac
done

USERARGS=$*
SUBMIT_HOST="if01.fnal.gov"

##############################
# filenames, variables, etc. #
##############################

LOG_DIR=`dirname $JOBLOGFILE`
mkdir -p $LOG_DIR
chmod g+rw ${LOG_DIR}

FILEBASE=`basename ${USEREXEC}`_`date +%Y%m%d_%H%M%S`
while [ -e `echo ${CONDOR_TMP}/${FILEBASE}_${uniquer}* | cut -d " " -f 1` ]
do
  uniquer=$(( uniquer + 1))  
done
WRAPFILE=${CONDOR_EXEC}/${FILEBASE}_${uniquer}_wrap.sh
FILEBASE=${CONDOR_TMP}/${FILEBASE}_${uniquer}
CMDFILE=${FILEBASE}.cmd

LOGFILE=${FILEBASE}.log
ERRFILE=${FILEBASE}.err
OUTFILE=${FILEBASE}.out


#######################
# build the .cmd file #
#######################

echo "universe      = vanilla" >> $CMDFILE
echo "executable    = "$WRAPFILE >> $CMDFILE
echo "arguments     = "$USERARGS >> $CMDFILE
echo "output        = "${OUTFILE} >> $CMDFILE
echo "error         = "${ERRFILE} >> $CMDFILE
echo "log           = "${LOGFILE} >> $CMDFILE
echo "environment   = "$ENVIRONMENT >> $CMDFILE
echo "rank          = Mips / 2 + Memory" >> $CMDFILE
# notification options

if [ "$NOTIFY" -eq 0 ]
then
  echo "notification  = Never" >> $CMDFILE
elif [ "$NOTIFY" -eq 1 ]
then
  echo "notification  = Error" >> $CMDFILE
else
  echo "notification  = Always" >> $CMDFILE
fi

echo "requirements  = "$REQUIREMENTS >> $CMDFILE
echo "queue " >> $CMDFILE

##########################
# now, build the wrapper #
##########################

echo "#!/bin/sh" >> $WRAPFILE
echo "#" >> $WRAPFILE
echo "# "$WRAPFILE >> $WRAPFILE
echo "# Automatically generated by: " >> $WRAPFILE
echo "#      ${thisscript} ${fullargs}" >> $WRAPFILE
echo "" >> $WRAPFILE
echo "# Hold and clear arg list" >> $WRAPFILE
echo "args=\"\$@\"" >> $WRAPFILE
echo "set - \"\"" >> $WRAPFILE
echo "" >> $WRAPFILE

echo "# To prevent output files from being transferred back" >> $WRAPFILE
echo "export _CONDOR_SCRATCH_DIR=\$_CONDOR_SCRATCH_DIR/no_xfer" >> $WRAPFILE
echo "mkdir -p \$_CONDOR_SCRATCH_DIR" >> $WRAPFILE
echo "" >> $WRAPFILE


echo "mkdir \$_CONDOR_SCRATCH_DIR/hackbin" >> $WRAPFILE
echo "echo 'if [ \"\$*\" = \"-v\" ]; then ' >> \$_CONDOR_SCRATCH_DIR/hackbin/gcc" >> $WRAPFILE
echo "echo 'echo \"gcc version 3.4.6 20060404 (Red Hat 3.4.6-11)\"' >> \$_CONDOR_SCRATCH_DIR/hackbin/gcc" >> $WRAPFILE
echo "echo 'else' >> \$_CONDOR_SCRATCH_DIR/hackbin/gcc" >> $WRAPFILE
echo "echo '/usr/bin/gcc \"\$@\"' >> \$_CONDOR_SCRATCH_DIR/hackbin/gcc" >> $WRAPFILE
echo "echo 'fi' >> \$_CONDOR_SCRATCH_DIR/hackbin/gcc" >> $WRAPFILE
echo "chmod +x \$_CONDOR_SCRATCH_DIR/hackbin/gcc" >> $WRAPFILE
echo "PATH=\$_CONDOR_SCRATCH_DIR/hackbin:\$PATH" >> $WRAPFILE

echo "" >> $WRAPFILE
echo "cd ${PWD}" >> $WRAPFILE
echo ". setup_beamsim.sh" >> $WRAPFILE   
echo "setup_beamsim -w 1" >> $WRAPFILE
echo "" >> $WRAPFILE

echo "export PATH=\"\${PATH}:.\"" >> $WRAPFILE
echo "" >> $WRAPFILE

echo >> $WRAPFILE

echo "${USEREXEC} ${G4MACRO} > ${JOBLOGFILE}" >> $WRAPFILE
#echo "${USEREXEC} ${G4MACRO}" >> $WRAPFILE
echo "CPN=/grid/fermiapp/minos/scripts/cpn " >> $WRAPFILE

echo >> $WRAPFILE

# chmod wrapper
chmod a+x $WRAPFILE

##########
# submit #
##########

status=0
echo "Created $CMDFILE"
curr=`/bin/pwd` ; cd /tmp
#/opt/condor/bin/condor_submit $CMDFILE
minerva_jobsub -L ${JOBLOGFILE} -g ${WRAPFILE}
status=$?
cd $curr
chmod g+rw ${CONDOR_TMP}
exit $status


